"""
Django settings for p2p_market project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, 'p2p_market', 'build', 'static'),
# ]



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-f$hictt0tc&b6&#)*=-r_syj-@2%s)m(-q=_7u79#3(f1t)w!#'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS = ['localhost', '127.0.0.1', '172.16.136.217', '172.16.131.24', 'lazy-eagles-admire.loca.lt ']
ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'p2p_site',
    'channels',
    'djoser',
    'rest_framework_simplejwt',
    'rest_framework',
    'corsheaders',
    'django_extensions'
]
 
CORS_ALLOW_ALL_ORIGINS = True

# CORS_ALLOWED_ORIGINS = [
#     'http://172.16.136.217:3000',
#     'http://172.16.131.24:3000',
#     "http://localhost:3000",
#     "http://127.0.0.1:3000",
#     "https://lazy-eagles-admire.loca.lt",
#     "http://lazy-eagles-admire.loca.lt",
# ]

CORS_ALLOW_CREDENTIALS = True

CORS_ALLOW_ALL_HEADERS = True

# CSRF_TRUSTED_ORIGINS = [
#     # "http://localhost:3000",
#     # "http://127.0.0.1:3000",
#     # "http://lazy-eagles-admire.loca.lt"
# ]

CSRF_TRUSTED_ORIGINS = ["http://*", "https://*"]


# Configure ASGI application
ASGI_APPLICATION = 'p2p_market.asgi.application'

# Redis configuration for channel layers
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('127.0.0.1', 6379)],  
        },
    },
}

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'p2p_market.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'p2p_market', 'build'),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'p2p_site.context_processors.categories',
                'p2p_site.context_processors.favorites',
            ],
        },
    },
]


WSGI_APPLICATION = 'p2p_market.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


USE_DEV_PORT_FORWARDING = True

DEV_FORWARDING_URL = os.getenv('DEV_FORWARDING_URL', 'https://wh8txwpx-8000.uks1.devtunnels.ms')


from urllib.parse import urlparse

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# # Parse the URL to ensure it's properly formatted
# parsed_url = urlparse(DEV_FORWARDING_URL)

# # Base configuration
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# if os.getenv('USE_DEV_PORT_FORWARDING') == 'true':
#     # Ensure the URL ends with a trailing slash
#     MEDIA_URL = f'{DEV_FORWARDING_URL.rstrip("/")}/media/'
    
#     # Additional security settings for serving media over HTTPS
#     SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
#     SESSION_COOKIE_SECURE = True
#     CSRF_COOKIE_SECURE = True
# else:
#     MEDIA_URL = '/media/'


# if os.getenv('USE_DEV_PORT_FORWARDING') == 'true':  # An environment variable to switch dynamically
#     MEDIA_URL = 'https://wh8txwpx-8000.uks1.devtunnels.ms/media/'
# else:
#     MEDIA_URL = '/media/'

# MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')



LOGIN_URL = 'user_login'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ),
    'EXCEPTION_HANDLER': 'rest_framework.views.exception_handler'
}


from datetime import timedelta


SIMPLE_JWT = {
    'AUTH_HEADER_TYPES': ('JWT',),
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),  # Adjust as needed
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),     # Adjust as needed
}

AUTH_USER_MODEL = 'p2p_site.CustomUser'


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com' 
EMAIL_PORT = 587  
EMAIL_USE_TLS = True  
EMAIL_HOST_USER = 'trust.trade.site@gmail.com'
EMAIL_HOST_PASSWORD = 'sojb fhwr pdge ncxh'  

DJOSER = {
    'LOGIN_FIELD': 'email',
    'USER_CREATE_PASSWORD_RETYPE': True,
    'USERNAME_CHANGED_EMAIL_CONFIRMATION': True,
    'PASSWORD_CHANGED_EMAIL_CONFIRMATION': True,
    'SEND_EMAIL_CONFIRMATION': True,
    'SEND_CONFIRMATION_EMAIL': True,
    'SET_PASSWORD_RETYPE': True,
    'PASSWORD_RESET_CONFIRM_URL': 'password/reset/confirm/{uid}/{token}',
    'USERNAME_RESET_CONFIRM_URL': 'email/reset/confirm/{uid}/{token}',
    'ACTIVATION_URL': 'activate/{uid}/{token}',
    'SEND_ACTIVATION_EMAIL': True,
    'SERIALIZERS':{
        'user_create': 'p2p_site.serializers.UsercreateSerializer',
        'user': 'p2p_site.serializers.CustomUserSerializer', 
        'current_user': 'p2p_site.serializers.CustomUserSerializer', 
        'user_delete': 'djoser.serializers.UserDeleteSerializer',

        
    },
    'PERMISSIONS': {
        'activation': ['rest_framework.permissions.AllowAny'],
        'password_reset': ['rest_framework.permissions.AllowAny'],
        'password_reset_confirm': ['rest_framework.permissions.AllowAny'],
        'set_password': ['djoser.permissions.CurrentUserOrAdmin'],
        'username_reset': ['rest_framework.permissions.AllowAny'],
        'reset_confirm': ['rest_framework.permissions.AllowAny'],
        'set_username': ['djoser.permissions.CurrentUserOrAdmin'],
        'user_create': ['rest_framework.permissions.AllowAny'],
        'user_delete': ['djoser.permissions.CurrentUserOrAdmin'],
        'user': ['djoser.permissions.CurrentUserOrAdmin'],
        'user_list': ['djoser.permissions.CurrentUserOrAdmin'],
        'token_create': ['rest_framework.permissions.AllowAny'],
        'token_destroy': ['rest_framework.permissions.IsAuthenticated'],
    },
    'EMAIL': {
        'activation': 'djoser.email.ActivationEmail',
        'activation_complete': 'djoser.email.ActivationEmail',
    },
    'TEMPLATES': {
        'activation': 'email/activation.html',
        'activation_complete': 'email/activation_complete.html',
    },

    'TEMPLATE_DIR': 'templates',
}

EMAIL_FRONTEND_DOMAIN = 'localhost:3000'